version: '3.9'

services:
  app:
    image: 'spring-boot-example:latest'
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: app
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/example
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
    ports:
      - "8080:8080"
    restart: always
    networks:
      spring:
        aliases:
          - application

  postgres:
    image: 'postgres:13.1-alpine'
    container_name: postgres
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      spring:
        aliases:
          - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      spring:
        aliases:
          - pgadmin

  grafana:
    build: './config/grafana'
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      spring:
        aliases:
          - grafana

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      spring:
        aliases:
          - prometheus

networks:
  spring:
    driver: bridge
